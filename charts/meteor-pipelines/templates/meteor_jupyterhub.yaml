---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: jupyterhub
spec:
  params:
    - name: url
      type: string
    - name: ref
      type: string
      default: ""
    - name: jupyterHubNamespace
      type: string
      # default: "$(context.pipelineRun.namespace)"
      default: opf-jupyterhub
    - name: ownerReferences
      default: "[]"

  results:
    - name: url
      value: "$(tasks.url-to-results.results.results)"

  workspaces:
    - name: data

  tasks:
    - name: git-clone
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
        - name: output
          workspace: data
      params:
        - name: url
          value: $(params.url)
        - name: revision
          value: $(params.ref)
        - name: subdirectory
          value: repo

    - name: generate
      taskRef:
        name: generate-jupyterhub
      runAfter:
        - git-clone
      workspaces:
        - name: data
          workspace: data
      params:
        - name: url
          value: $(params.url)

    - name: buildah
      taskRef:
        name: buildah
      runAfter:
        - generate
      workspaces:
        - name: data
          workspace: data
      params:
        - name: IMAGE
          value: image-registry.openshift-image-registry.svc:5000/$(params.jupyterHubNamespace)/$(context.pipelineRun.name)
        - name: BASE_IMAGE
          value: $(tasks.generate.results.baseImage)

    - name: resolve-owner-reference
      taskRef:
        name: resolve-owner-reference
      params:
        - name: ownerReferences
          value: $(params.ownerReferences)
        - name: namespace
          value: $(params.jupyterHubNamespace)

    - name: create-image-stream
      taskRef:
        name: openshift-client
        kind: ClusterTask
      runAfter:
        - buildah
        - resolve-owner-reference
      params:
        - name: SCRIPT
          value: |
            cat <<EOM | oc apply -f -
            ---
            kind: ImageStream
            apiVersion: image.openshift.io/v1
            metadata:
              annotations:
                opendatahub.io/notebook-image-name: $(context.pipelineRun.name)
                opendatahub.io/notebook-image-url: $(params.url)
              name: $(context.pipelineRun.name)
              namespace: $(params.jupyterHubNamespace)
              labels:
                opendatahub.io/notebook-image: 'true'
            spec:
              lookupPolicy:
                local: true
              tags:
                - name: latest
            EOM

            oc patch -n $(params.jupyterHubNamespace) imagestream/$(context.pipelineRun.name) --type='merge' -p='$(tasks.resolve-owner-reference.results.patch)'

    - name: url-to-results
      taskRef:
        name: oc-actions
      runAfter:
        - buildah
      params:
        - name: script
          value: |
            echo "http://$(oc get route jupyterhub -n $(params.jupyterHubNamespace) --template='{{ .spec.host }}')/hub/spawn#:~:text=$(context.pipelineRun.name)" > $(results.results.path)

  finally:
    - name: push-metrics
      taskRef:
        name: send-metrics
      workspaces:
        - name: data
          workspace: data
      params:
        - name: pipeline
          value: $(context.pipeline.name)
        - name: pipelineRun
          value: $(context.pipelineRun.name)
